name: Build and Deploy TESTNET

on:
  workflow_dispatch:
    inputs:
      node1argbootnode:
        description: "Bootnodes parameter for node 1"
        default: 'default'
        type: string
        required: true
      node1argextra:
        description: "Extra args except of --port, --udp, --tcp"
        default: ''
        type: string
        required: false
      node2argbootnode:
        description: "Bootnodes parameter for node 2"
        default: 'default'
        type: string
        required: true
      node2argextra:
        description: "Extra args except of --port, --udp, --tcp"
        default: ''
        type: string
        required: false

jobs:
  deploynode1:
    runs-on: ["masa-oracle-node-1"]
    outputs:
      MASA_NODE_MULTIADDRESS: ${{steps.step2.outputs.MASA_NODE_MULTIADDRESS}}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Copy binary & restart service
      id: step2
      run: |
        echo "node1argbootnode: ${{ inputs.node1argbootnode }}"
        echo "node1argextra: ${{ inputs.node1argextra }}"
        /usr/local/go/bin/go mod tidy
        /usr/local/go/bin/go build -v -o masa-node ./cmd/masa-node
        export BOOTNODES="${{ inputs.node1argbootnode }}"
        export EXTRA_ARGS="${{ inputs.node1argextra }}"
        if [[ "$BOOTNODES" == "default" ]]; then
          export BOOTNODES_ARG=""
          export BOOTNODES=""
        else
          export BOOTNODES_ARG="--bootnodes=";
        fi
        echo "ARG: $BOOTNODES_ARG NODES: $BOOTNODES"
        rm -rf /home/masa/masa-oracle
        mkdir /home/masa/masa-oracle
        cp -R . /home/masa/masa-oracle/
        cat system-service/masa-oracle.service | envsubst > masa-oracle.service
        sudo mv masa-oracle.service /etc/systemd/system/masa-oracle.service
        sudo systemctl daemon-reload
        sudo systemctl restart masa-oracle.service    
        until [ -f /home/masa/.masa/masa_oracle_node_output.env ]; do sleep 5; done 
        source /home/masa/.masa/masa_oracle_node_output.env
        echo "MASA_NODE_MULTIADDRESS: $MASA_NODE_MULTIADDRESS"
        echo "MASA_NODE_MULTIADDRESS=$MASA_NODE_MULTIADDRESS" >> "$GITHUB_OUTPUT"
        
  deploynode2:
    needs: deploynode1
    runs-on: ["masa-oracle-node-2"]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Copy binary & restart service
      run: |
        echo "node1argbootnode: ${{ inputs.node1argbootnode }}"
        echo "node1argextra: ${{ inputs.node1argextra }}"
        /usr/local/go/bin/go mod tidy
        /usr/local/go/bin/go build -v -o masa-node ./cmd/masa-node
        export BOOTNODES="${{ inputs.node2argbootnode }}"
        export EXTRA_ARGS="${{ inputs.node2argextra }}"
        export BOOTNODES_ARG="--bootnodes=";
        if [[ "$BOOTNODES" == "default" ]]; then
          export BOOTNODES="${{needs.deploynode1.outputs.MASA_NODE_MULTIADDRESS}}"
        fi
        echo "ARG: $BOOTNODES_ARG NODES: $BOOTNODES"
        rm -rf /home/masa/masa-oracle
        mkdir /home/masa/masa-oracle
        cp -R . /home/masa/masa-oracle/
        cat system-service/masa-oracle.service | envsubst > masa-oracle.service
        sudo mv masa-oracle.service /etc/systemd/system/masa-oracle.service
        sudo systemctl daemon-reload
        sudo systemctl restart masa-oracle.service
